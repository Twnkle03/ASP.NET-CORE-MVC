@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager




<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
           @* @UserManager.FindByEmailAsync(@UserManager.GetUserName(User)).Result.EmailConfirmed*@
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><b>Hello @UserManager.GetUserName(User)!</b></a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark"><i class="bi bi-box-arrow-left"></i>Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="bi bi-person-circle"></i>Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-box-arrow-in-right"></i>Login</a>
    </li>
}
</ul>
